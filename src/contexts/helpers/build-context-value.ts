import type { SimulationContextState } from './simulation-context-state'

interface ContextValueParams {
  state: any // From useSimulationState
  configManagement: {
    getCurrentConfiguration: () => any
    saveCurrentConfiguration: () => void
    loadSavedConfiguration: () => void
    resetToDefaults: () => void
  }
  execution: {
    performSimulation: (overwrite?: { rendite?: number }) => Promise<void>
  }
  effects: {
    setEndOfLifeRounded: (endOfLife: number) => void
  }
}

/**
 * Build the complete context value object from state and helper functions
 */
export function buildContextValue({
  state,
  configManagement,
  execution,
  effects,
}: ContextValueParams): SimulationContextState {
  const {
    rendite, setRendite,
    steuerlast, setSteuerlast,
    teilfreistellungsquote, setTeilfreistellungsquote,
    freibetragPerYear, setFreibetragPerYear,
    basiszinsConfiguration, setBasiszinsConfiguration,
    steuerReduzierenEndkapitalSparphase, setSteuerReduzierenEndkapitalSparphase,
    steuerReduzierenEndkapitalEntspharphase, setSteuerReduzierenEndkapitalEntspharphase,
    grundfreibetragAktiv, setGrundfreibetragAktiv,
    grundfreibetragBetrag, setGrundfreibetragBetrag,
    personalTaxRate, setPersonalTaxRate,
    guenstigerPruefungAktiv, setGuenstigerPruefungAktiv,
    kirchensteuerAktiv, setKirchensteuerAktiv,
    kirchensteuersatz, setKirchensteuersatz,
    returnMode, setReturnMode,
    averageReturn, setAverageReturn,
    standardDeviation, setStandardDeviation,
    randomSeed, setRandomSeed,
    variableReturns, setVariableReturns,
    historicalIndex, setHistoricalIndex,
    blackSwanReturns, setBlackSwanReturns,
    blackSwanEventName, setBlackSwanEventName,
    inflationScenarioRates, setInflationScenarioRates,
    inflationScenarioReturnModifiers, setInflationScenarioReturnModifiers,
    inflationScenarioName, setInflationScenarioName,
    multiAssetConfig, setMultiAssetConfig,
    withdrawalMultiAssetConfig, setWithdrawalMultiAssetConfig,
    inflationAktivSparphase, setInflationAktivSparphase,
    inflationsrateSparphase, setInflationsrateSparphase,
    inflationAnwendungSparphase, setInflationAnwendungSparphase,
    startEnd, setStartEnd,
    sparplan, setSparplan,
    simulationAnnual, setSimulationAnnual,
    sparplanElemente, setSparplanElemente,
    endOfLife,
    lifeExpectancyTable, setLifeExpectancyTable,
    customLifeExpectancy, setCustomLifeExpectancy,
    planningMode, setPlanningMode,
    gender, setGender,
    spouse, setSpouse,
    birthYear, setBirthYear,
    expectedLifespan, setExpectedLifespan,
    useAutomaticCalculation, setUseAutomaticCalculation,
    simulationData,
    isLoading,
    withdrawalResults, setWithdrawalResults,
    withdrawalConfig, setWithdrawalConfig,
    statutoryPensionConfig, setStatutoryPensionConfig,
    coupleStatutoryPensionConfig, setCoupleStatutoryPensionConfig,
    careCostConfiguration, setCareCostConfiguration,
    financialGoals, setFinancialGoals,
  } = state

  return {
    rendite,
    setRendite,
    steuerlast,
    setSteuerlast,
    teilfreistellungsquote,
    setTeilfreistellungsquote,
    freibetragPerYear,
    setFreibetragPerYear,
    basiszinsConfiguration,
    setBasiszinsConfiguration,
    steuerReduzierenEndkapitalSparphase,
    setSteuerReduzierenEndkapitalSparphase,
    steuerReduzierenEndkapitalEntspharphase,
    setSteuerReduzierenEndkapitalEntspharphase,
    grundfreibetragAktiv,
    setGrundfreibetragAktiv,
    grundfreibetragBetrag,
    setGrundfreibetragBetrag,
    personalTaxRate,
    setPersonalTaxRate,
    guenstigerPruefungAktiv,
    setGuenstigerPruefungAktiv,
    kirchensteuerAktiv,
    setKirchensteuerAktiv,
    kirchensteuersatz,
    setKirchensteuersatz,
    returnMode,
    setReturnMode,
    averageReturn,
    setAverageReturn,
    standardDeviation,
    setStandardDeviation,
    randomSeed,
    setRandomSeed,
    variableReturns,
    setVariableReturns,
    historicalIndex,
    setHistoricalIndex,
    blackSwanReturns,
    setBlackSwanReturns,
    blackSwanEventName,
    setBlackSwanEventName,
    inflationScenarioRates,
    setInflationScenarioRates,
    inflationScenarioReturnModifiers,
    setInflationScenarioReturnModifiers,
    inflationScenarioName,
    setInflationScenarioName,
    multiAssetConfig,
    setMultiAssetConfig,
    withdrawalMultiAssetConfig,
    setWithdrawalMultiAssetConfig,
    inflationAktivSparphase,
    setInflationAktivSparphase,
    inflationsrateSparphase,
    setInflationsrateSparphase,
    inflationAnwendungSparphase,
    setInflationAnwendungSparphase,
    startEnd,
    setStartEnd,
    sparplan,
    setSparplan,
    simulationAnnual,
    setSimulationAnnual,
    sparplanElemente,
    setSparplanElemente,
    endOfLife,
    setEndOfLife: effects.setEndOfLifeRounded,
    lifeExpectancyTable,
    setLifeExpectancyTable,
    customLifeExpectancy,
    setCustomLifeExpectancy,
    planningMode,
    setPlanningMode,
    gender,
    setGender,
    spouse,
    setSpouse,
    birthYear,
    setBirthYear,
    expectedLifespan,
    setExpectedLifespan,
    useAutomaticCalculation,
    setUseAutomaticCalculation,
    simulationData,
    isLoading,
    withdrawalResults,
    setWithdrawalResults,
    performSimulation: execution.performSimulation,
    getCurrentConfiguration: configManagement.getCurrentConfiguration,
    saveCurrentConfiguration: configManagement.saveCurrentConfiguration,
    loadSavedConfiguration: configManagement.loadSavedConfiguration,
    resetToDefaults: configManagement.resetToDefaults,
    withdrawalConfig,
    setWithdrawalConfig,
    statutoryPensionConfig,
    setStatutoryPensionConfig,
    coupleStatutoryPensionConfig,
    setCoupleStatutoryPensionConfig,
    careCostConfiguration,
    setCareCostConfiguration,
    financialGoals,
    setFinancialGoals,
  }
}
